function net = function_Train_G(XTrain, YTrain, miniBatchSize, maxEpoch, InitialLearnRate, length_output_G)

% Generative network construction for GAN, number of network layers, initialization of various parameters during training
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
layers = [
    sequenceInputLayer(1, "Name", "sequence")
    fullyConnectedLayer(1000, "Name", "fc_1")
    fullyConnectedLayer(1000, "Name", "fc_2")
    fullyConnectedLayer(length_output_G, "Name", "fc_3")
    regressionLayer("Name", "regressionoutput")];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The information on the training parameters is similar to that of the D network, refer to the file function_Train_D.m
options = trainingOptions('adam', ...
    'MaxEpochs', maxEpoch, ...
    'MiniBatchSize', miniBatchSize, ...
    'GradientThreshold', 1, ...
    'InitialLearnRate', InitialLearnRate, ...
    'LearnRateSchedule', 'piecewise', ...
    'LearnRateDropPeriod', 125, ...
    'LearnRateDropFactor', 0.2, ...
    'Verbose', 0); 
%      'Plots', 'training-progress',...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
net = trainNetwork(XTrain, YTrain, layers, options);
end
